{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,SAE9B,EAAa,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAzC,EACE,EAAK,gBAAgB,CAAC,QAAS,WAC7B,EAAQ,wBACV,EACF,GAEM,EAAa,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAzC,EACE,WAAW,WACT,EAAO,AAAI,MAAM,yBACnB,EAAG,IACL,GAEM,EAAgB,SAAC,CAAvB,EAAgC,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CACxB,EAAgB,SAAS,aAAa,CAAC,MAE7C,CAAA,EAAc,SAAS,CAAG,EAAU,wBAA0B,UAE9D,EAAc,WAAW,CAAG,EAE5B,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAEA,EACG,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAc,EAChC,GAAA,KAAK,CAAC,SAAC,CAAP,EACC,EAAc,EAAM,OAAO,CAAE,CAAA,EAC/B,GAEF,EACG,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAc,EAChC,GAAA,KAAK,CAAC,SAAC,CAAP,EACC,EAAc,EAAM,OAAO,CAAE,CAAA,EAC/B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar logo = document.querySelector(\".logo\");\nvar promiseOne = new Promise(function(resolve, reject) {\n    logo.addEventListener(\"click\", function() {\n        resolve(\"Promise was resolved!\");\n    });\n});\nvar promiseTwo = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        reject(new Error(\"Promise was rejected!\"));\n    }, 3000);\n});\nvar resultHandler = function(message) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var resultMessage = document.createElement(\"div\");\n    resultMessage.className = isError ? \"message error-message\" : \"message\";\n    resultMessage.textContent = message;\n    document.body.appendChild(resultMessage);\n};\npromiseOne.then(function(message) {\n    return resultHandler(message);\n}).catch(function(error) {\n    resultHandler(error.message, true);\n});\npromiseTwo.then(function(message) {\n    return resultHandler(message);\n}).catch(function(error) {\n    resultHandler(error.message, true);\n});\n\n//# sourceMappingURL=index.b2356af8.js.map\n","'use strict';\n\nconst logo = document.querySelector('.logo');\n\nconst promiseOne = new Promise((resolve, reject) => {\n  logo.addEventListener('click', () => {\n    resolve('Promise was resolved!');\n  });\n});\n\nconst promiseTwo = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(new Error('Promise was rejected!'));\n  }, 3000);\n});\n\nconst resultHandler = (message, isError = false) => {\n  const resultMessage = document.createElement('div');\n\n  resultMessage.className = isError ? 'message error-message' : 'message';\n\n  resultMessage.textContent = message;\n\n  document.body.appendChild(resultMessage);\n};\n\npromiseOne\n  .then((message) => resultHandler(message))\n  .catch((error) => {\n    resultHandler(error.message, true);\n  });\n\npromiseTwo\n  .then((message) => resultHandler(message))\n  .catch((error) => {\n    resultHandler(error.message, true);\n  });\n"],"names":["logo","document","querySelector","promiseOne","Promise","resolve","reject","addEventListener","promiseTwo","setTimeout","Error","resultHandler","message","isError","arguments","length","resultMessage","createElement","className","textContent","body","appendChild","then","catch","error"],"version":3,"file":"index.b2356af8.js.map"}